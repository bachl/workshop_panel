# Modelle anhand der Beispiel-Daten

# no pooling
n = 8; t = 6; tce = 1
example_data = tibble(id = 1:n,
                      z = seq(-3, 3, length.out = n),
                      m_beer = z * 1 + rnorm(n)) %>%
  replicate(t, ., simplify = FALSE) %>%
  bind_rows() %>%
  mutate(beer = m_beer + rnorm(n*t),
         beer = beer + abs(min(beer)),
         hangover = beer * tce + z * -2 + rnorm(n*t))

example_data %>%
  group_by(id) %>%
  nest() %>%
  mutate(mdls = map(data, ~tidy(lm(hangover ~ beer, data = .x)))) %>%
  unnest(mdls) %>%
  ungroup() %>%
  select(-data) %>%
  filter(term == "beer") %>%
  mutate_if(is.numeric, round, 2) %>%
  print %>%
  summarise(estimate = mean(estimate),
            std.error = sqrt(mean(std.error^2))) # simple approximation

#wi-trans
n = 8; t = 6; tce = 1
example_data = tibble(id = 1:n,
                      z = seq(-3, 3, length.out = n),
                      m_beer = z * 1 + rnorm(n)) %>%
  replicate(t, ., simplify = FALSE) %>%
  bind_rows() %>%
  mutate(beer = m_beer + rnorm(n*t),
         beer = beer + abs(min(beer)),
         hangover = beer * tce + z * -2 + rnorm(n*t))

example_data_wi = example_data %>%
  select(id, beer, hangover) %>%
  group_by(id) %>%
  mutate(beer_wi = beer - mean(beer),
         hangover_wi = hangover - mean(hangover)) %>%
  ungroup()

example_data_wi %>%
  select(-id) %>%
  summary

example_data_wi %>%
  lm(hangover_wi ~ beer_wi, data = .) %>%
  tidy() %>%
  mutate_if(is.numeric, round, 2)


#lsdv
n = 8; t = 6; tce = 1
example_data = tibble(id = 1:n,
                      z = seq(-3, 3, length.out = n),
                      m_beer = z * 1 + rnorm(n)) %>%
  replicate(t, ., simplify = FALSE) %>%
  bind_rows() %>%
  mutate(beer = m_beer + rnorm(n*t),
         beer = beer + abs(min(beer)),
         hangover = beer * tce + z * -2 + rnorm(n*t))

example_data %>%
  lm(hangover ~ beer + factor(id), data = .) %>%
  tidy() %>%
  mutate_if(is.numeric, round, 2) %>%
  print(n = 17)

# Period FE
n = 8; t = 6; tce = 1
example_data = tibble(id = 1:n,
                      z = seq(-3, 3, length.out = n),
                      m_beer = z * 1 + rnorm(n)) %>% 
  replicate(t, ., simplify = FALSE) %>% 
  bind_rows(.id = "t") %>% 
  mutate(t = as.integer(t),
         beer = m_beer + rnorm(n*t),
         beer = beer + abs(min(beer)),
         hangover = beer * tce + z * -2 + rnorm(n*t))

example_data %>%
  lm(hangover ~ beer + factor(t) + factor(id), data = .) %>%
  tidy() %>% 
  mutate_if(is.numeric, round, 2) %>% 
  print(n = 17)